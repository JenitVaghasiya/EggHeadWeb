@using EggheadWeb.Common;
@using EggHeadWeb.DatabaseContext;
@using EggheadWeb.Models.Common;
@using EggheadWeb.Models.AdminModels;
@model Parent
@{
    ViewBag.BreadCrumbs = new string[] { "Contacts", "Parents" };
    ViewBag.Title = Model.Id > 0 ? "Edit Parent" : "New Parent";
    ViewBag.CurrentMenu = 3;
    Layout = "~/Views/Shared/_AdminLayout.cshtml";

    var db = new EggheadContext();
    var admin = EggheadWeb.Security.UserProvider.Current.Admin;

    var calendarSearchForm = new CalendarSearchForm
    {
        ViewBy = CalendarViewType.Month,
        Date = DateTime.Today,
        ParentId = Model.Id,
        ShowClasses = true,
        ShowCamps = true,
        ShowBirthdays = true,
        ShowWorkshops = false,
    };
}
<script type="text/javascript">
    $(document).ready(function () {
        $.nyroModalSettings({
            width: 400,
            height: 500,
            windowResizing: true
        });
    });
</script>
@using (Html.BeginForm())
{
    <div class="box" style="margin-top: 0; margin-bottom: 0;">
        @if (Model.Id <= 0)
        {
            Html.RenderPartial("MainTaskbar", new MainTaskbarItem { Save = true });
        }
        else
        {
            Html.RenderPartial("MainTaskbar", new MainTaskbarItem { Add = true, AddAction = "parents-detail", Print = true, Email = true, ExcelAction = "parent-detail-excel?id=" + Model.Id, Save = true, EmailToAddress = Model.Email, EmailToName = Model.FirstName + " " + Model.LastName });
        }
        <input type="button" class="btn" style="float: right" value="Cancel" data-redirect="@Url.RouteUrl("Admin", new { action = "parents", research = "true" })" />
    </div>
    @Html.ValidationSummary(true)
    <table>
        <colgroup>
            <col class="width3" />
            <col class="width3" />
        </colgroup>
        <tr>
            <td>
                <p>
                    <label class="required" for="area">
                        Location:
                    </label>
                    @Html.ValidationMessageFor(m => m.LocationId)<br />
                    @Html.DropDownListFor(m => m.LocationId, SelectLists.Locations(db), Constants.SELECT_LOCATION, new { @class = "half" })
                </p>
            </td>
            <td></td>
        </tr>
        <tr>
            <td>
                <p>
                    <label class="required" for="firstname">
                        First Name:
                    </label>
                    @Html.ValidationMessageFor(m => m.FirstName)<br />
                    @Html.TextBoxFor(m => m.FirstName, new { @class = "half" })
                </p>
            </td>
            <td>
                <p>
                    <label class="required" for="lastname">
                        Last Name:
                    </label>
                    @Html.ValidationMessageFor(m => m.LastName)<br />
                    @Html.TextBoxFor(m => m.LastName, new { @class = "half" })
                </p>
            </td>
        </tr>
        @if (Model.Id <= 0)
        {
            <tr>
                <td>
                    <p>
                        <label class="required" for="password">
                            Password:
                        </label>
                        @Html.ValidationMessageFor(m => m.Password)<br />
                        @Html.TextBoxFor(m => m.Password)
                    </p>
                </td>
                <td></td>
            </tr>
        }
    </table>
    <div class="tabs">
        <ul>
            <li><a class="corner-tl" href="#tabs-schedule">Schedule</a></li>
            <li><a href="#tabs-address">Address</a></li>
            <li><a href="#tabs-contact">Contact</a></li>
            <li><a href="#tabs-children">Children</a></li>
            <li><a class="corner-tr" href="#tabs-notes">Notes</a></li>
        </ul>
        <div id="tabs-schedule">
            @if (Model.Id > 0)
            {
                Html.RenderAction("calendar-schedule", new { form = calendarSearchForm });
            }
        </div>
        <div id="tabs-address">
            <p>
                <label class="required" for="address">
                    Address:
                </label>
                @Html.ValidationMessageFor(mbox => mbox.Address)<br />
                @Html.TextBoxFor(m => m.Address, new { @id = "address", @name = "address", @class = "half" })
            </p>
            <p>
                <label class="required" for="city">
                    City:
                </label>
                @Html.ValidationMessageFor(mbox => mbox.City)<br />
                @Html.TextBoxFor(m => m.City, new { @id = "city", @name = "city", @class = "half" })
            </p>
            <p>
                <label class="required" for="state">
                    State:
                </label>
                @Html.ValidationMessageFor(mbox => mbox.State)<br />
                @Html.TextBoxFor(m => m.State, new { @id = "state", @name = "state", @class = "half" })
            </p>
            <p>
                <label class="required" for="zip">
                    Zip:
                </label>
                @Html.ValidationMessageFor(m => m.Zip)<br />
                @Html.TextBoxFor(m => m.Zip, new { @id = "zip", @name = "zip", @class = "half" })
            </p>
        </div>
        <div id="tabs-contact">
            <p>
                <label class="required" for="phoneNumer">
                    Phone number:
                </label>
                @Html.ValidationMessageFor(m => m.PhoneNumer)<br />
                @Html.TextBoxFor(m => m.PhoneNumer, new { @id = "phonenumber", @name = "phonenumber", @class = "input-phone-number half" })
            </p>
            <p>
                <label class="required" for="email">
                    Email:
                </label>
                @Html.ValidationMessageFor(m => m.Email)<br />
                @Html.TextBoxFor(m => m.Email, new { @id = "email", @name = "email", @class = "half" })
            </p>
        </div>
        <div id="tabs-children" class="paging-container">
            @if (Model.Id <= 0)
            {
                <h4>
                    You have to save parent info before add new child(ren).
                </h4>
            }
            else
            {
                @Html.Partial("students", Model.Students, new ViewDataDictionary { { "ParentId", Model.Id } })
            }
        </div>
        <div id="tabs-notes">
            <p>
                <label for="notes">
                    Notes:
                </label>
                @Html.ValidationMessageFor(m => m.Note)<br />
                @Html.TextAreaFor(m => m.Note, new { @id = "notes", @name = "notes", @class = "medium full" })
            </p>
        </div>
    </div>
    @Html.HiddenFor(m => m.Id)
}